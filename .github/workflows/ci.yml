name: ci
on: [push, pull_request]

jobs:
  build_test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y ninja-build
      - run: cmake -S . -B build -G Ninja -DCMAKE_CXX_STANDARD=23
      - run: cmake --build build -j
      - run: ctest --test-dir build --output-on-failure

  perf_gate:
    runs-on: ubuntu-22.04
    env:
      PERF_BUDGET_NS: '150000'   # 150 Âµs
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y ninja-build
      - run: cmake -S . -B build -G Ninja -DCMAKE_CXX_STANDARD=23
      - run: cmake --build build -j
      - name: run bench and check budget
        run: |
          set -e
          # Run the bench; keep full table in logs
          out="$(./build/bench_update | tee /dev/stderr)"

          # Parse the first data row's ns/op column from nanobench's table.
          # The header contains "ns/op", followed by a separator row, then the data row.
          avg_ns="$(printf '%s\n' "$out" \
            | awk -F'|' '/ns\/op/{getline; gsub(/^[ \t]+|[ \t]+$/, "", $2); print $2; exit}')"

          # Fallback if parsing failed
          if [ -z "$avg_ns" ]; then
            echo "Failed to parse ns/op from nanobench output"
            exit 2
          fi

          echo "avg_ns=$avg_ns ns/op"
          echo "budget=${PERF_BUDGET_NS} ns/op"

          # Numeric compare (handles floats) using awk
          awk -v x="$avg_ns" -v b="$PERF_BUDGET_NS" 'BEGIN { exit !(x < b) }'
  tidy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y ninja-build clang-tidy jq
      - run: cmake -S . -B build -G Ninja -DCMAKE_CXX_STANDARD=23 -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - run: cmake --build build -j
      - name: run clang-tidy (src/include only; fail on issues)
        run: |
          set -e
          files=$(jq -r '.[].file' build/compile_commands.json \
            | awk -v root="$GITHUB_WORKSPACE" 'index($0, root"/src/")==1 || index($0, root"/include/")==1' \
            | grep -E '\.(c|cc|cpp|cxx|h|hpp)$' | sort -u)
          [ -z "$files" ] && exit 0
          # Force a standard clang-tidy understands (last flag wins)
          clang-tidy -p build --extra-arg=-std=gnu++2b --warnings-as-errors='*' $files



  werror:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y ninja-build
      - run: cmake -S . -B build -G Ninja -DCMAKE_CXX_STANDARD=23 -DCEX_WERROR=ON
      - run: cmake --build build -j

